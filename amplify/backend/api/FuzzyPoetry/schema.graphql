enum ReplacementType {
  MEANS_LIKE
  TRIGGERED_BY
  ANAGRAM
  SPELLED_LIKE
  CONSONANT_MATCH
  HOMOPHONE
}

type PoemVariation @model @auth(rules: [{ allow: public }]) {
  id: ID!
  original_text: String
  variation_text: String
}

input ReplacementTypeCounts {
  means_like: Int
  triggered_by: Int
  anagram: Int
  spelled_like: Int
  consonant_match: Int
  homophone: Int
}

type Mutation {
  generatePoemVariation(originalPoem: String, replacementTypes: [ReplacementType]): String
    @auth(rules: [{ allow: public }])
    @function(name: "generatePoemVariation-${env}")

  generateCombinedVariation(
    originalPoem: String
    replacementTypeCounts: ReplacementTypeCounts
    algoVersion: String
  ): String @auth(rules: [{ allow: public }]) @function(name: "generateCombinedVariation-${env}")

  sendEmail(
    senderName: String
    senderAddress: String
    emailContent: String
    emailSubject: String
  ): String @auth(rules: [{ allow: public }]) @function(name: "sendEmail-${env}")
}
